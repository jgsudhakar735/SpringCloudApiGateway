CREATE TABLE ROUTE_DEF_MTB (
	API_KEY NUMBER(19) NOT NULL,
	API_NAME VARCHAR2(50) NOT NULL, -- path id
	REQUEST_URI VARCHAR2(1024) NOT NULL, -- request uri
	TARGET_URL VARCHAR2(2048) NOT NULL, -- target uri to which we need to send the call
	CONSTRAINT AR_PK PRIMARY KEY (API_KEY) ENABLE
);

ALTER TABLE ROUTE_DEF_MTB ADD CONSTRAINT APIM_API_ROUTE_UK UNIQUE (API_NAME);

CREATE SEQUENCE AR_SEQ START WITH 1 INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE OR REPLACE TRIGGER AR_SEQ_TR
 BEFORE INSERT ON ROUTE_DEF_MTB FOR EACH ROW
 WHEN (NEW.API_KEY IS NULL)
BEGIN
 SELECT AR_SEQ.NEXTVAL INTO :NEW.API_KEY FROM DUAL;
END;
/

CREATE TABLE FILTER_DEF_MTB (
	PK_KEY NUMBER(19) NOT NULL,
	FTR_NAME VARCHAR2(100) NOT NULL,
	FTR_REMARKS VARCHAR2(4000) NOT NULL,
	FTR_ORDER NUMBER(19) NOT NULL,
	API_KEY NUMBER(19) NOT NULL,
	CONSTRAINT FTR_PK PRIMARY KEY (PK_KEY) ENABLE
);

-- Foreign Key References form Router Definition Table
ALTER TABLE FILTER_DEF_MTB
    ADD CONSTRAINT FTR_API_KEY FOREIGN KEY ( API_KEY )
        REFERENCES ROUTE_DEF_MTB ( API_KEY );

CREATE SEQUENCE FTR_SEQ START WITH 1 INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE OR REPLACE TRIGGER FTR_SEQ_TR
 BEFORE INSERT ON FILTER_DEF_MTB FOR EACH ROW
 WHEN (NEW.PK_KEY IS NULL)
BEGIN
 SELECT FTR_SEQ.NEXTVAL INTO :NEW.PK_KEY FROM DUAL;
END;
/